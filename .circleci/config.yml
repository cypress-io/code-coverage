# https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
orbs:
  # https://github.com/cypress-io/circleci-orb
  cypress: cypress-io/cypress@3.0.0 # used to run e2e tests
  win: circleci/windows@5.0.0 # run a test job on Windows

jobs:
  lint:
    description: Checks the code formatting
    docker:
      - image: cimg/node:16.16.0
        environment:
          # we don't need Cypress to check code styl
          CYPRESS_INSTALL_BINARY: '0'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Code style check ðŸ§¹
          command: npm run format:check
      - run: npm run check:markdown
  
  install_and_persist:
    executor: cypress/default
    steps:
      - cypress/install
      - run:
          name: Install deps for test-apps/old-cypress-config
          command: npm ci
          working_directory: test-apps/old-cypress-config
      - run:
          name: Install deps for test-apps/new-cypress-config
          command: npm ci
          working_directory: test-apps/new-cypress-config
      - run: npm run check:markdown
      - persist_to_workspace:
          paths:
              - .cache/Cypress
              - project
          root: ~/

  windows_test:
    executor:
      # executor comes from the "windows" orb
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: Install node 16
          command: nvm install 16.16.0
      - run:
          name: Use node 16
          command: nvm use 16.16.0
      - run:
          name: Install deps for code coverage
          command: npm ci 
      - run:
          name: Install deps for test-apps/old-cypress-config
          command: npm ci
          working_directory: test-apps/old-cypress-config   
      - cypress/run-tests:
          # no-workspace: true
          start-command: npm run start:windows --prefix test-apps/old-cypress-config/all-files
          # wait-on: 'http://localhost:1234'
          cypress-command: npx cypress run --project test-apps/old-cypress-config/all-files
          # store screenshots and videos
          # store_artifacts: true          
      - run:
          # make sure the examples captures 100% of code
          name: Verify Code Coverage
          command: npm run coverage:verify
          working_directory: test-apps/old-cypress-config/all-files
      - run:
          name: Check code coverage files ðŸ“ˆ
          # we will check the final coverage report
          # to make sure it only has files we are interested in
          # because there are files covered at 0 in the report
          command: npm i -D check-code-coverage && npm run coverage:check-files:windows
          working_directory: test-apps/old-cypress-config/all-files

  publish:
    description: Publishes the new version of the plugin to NPM
    docker:
      - image: cimg/node:16.16.0
    environment:
      # we don't need Cypress to do the release
      CYPRESS_INSTALL_BINARY: '0'
      # trick semantic-release into thinking this is NOT a pull request
      # (under the hood the module env-ci is used to check if this is a PR)
      CIRCLE_PR_NUMBER: ''
      CIRCLE_PULL_REQUEST: ''
      CI_PULL_REQUEST: ''
    steps:
      - attach_workspace:
          at: ~/
      - run: npm run semantic-release

  cyrun:
    docker:
      - image: cypress/base:16.16.0
    parameters:
      jobname:
        type: string
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: npm run test
          working_directory: test-apps/<< parameters.jobname >>
      - store_artifacts:
          path: test-apps/<< parameters.jobname >>/coverage
      - run:
          name: Verify Code Coverage
          command: npm run coverage:verify
          working_directory: test-apps/<< parameters.jobname >>
      - run:
          name: Check code coverage files ðŸ“ˆ
          # we will check the final coverage report
          # to make sure it only has files we are interested in
          # because there are files covered at 0 in the report
          command: npm run coverage:check-files
          working_directory: test-apps/<< parameters.jobname >>

  test-code-coverage-plugin:
    docker:
      - image: cypress/base:16.16.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: npm run test
      - store_artifacts:
          path: coverage
      - run:
          name: Verify Code Coverage
          command: npm run coverage:verify

workflows:
  build:
    jobs:
      - install_and_persist
      - lint:
          requires:
            - install_and_persist

      - test-code-coverage-plugin:
          requires:
            - install_and_persist

      - cyrun:
          name: test-<< matrix.jobname>>
          requires:
            - install_and_persist
          matrix:
            parameters:
              jobname:
                - old-cypress-config/all-files
                - old-cypress-config/backend
                - old-cypress-config/before-all-visit
                - old-cypress-config/before-each-visit
                - old-cypress-config/exclude-files
                - old-cypress-config/frontend
                - old-cypress-config/fullstack
                - old-cypress-config/one-spec
                - old-cypress-config/same-folder
                - old-cypress-config/support-files
                - old-cypress-config/ts-example
                - old-cypress-config/unit-tests-js
                - old-cypress-config/use-webpack
                - new-cypress-config/all-files
                - new-cypress-config/backend
                - new-cypress-config/before-all-visit
                - new-cypress-config/before-each-visit
                - new-cypress-config/cra-e2e-and-ct
                - new-cypress-config/exclude-files
                - new-cypress-config/frontend
                - new-cypress-config/fullstack
                - new-cypress-config/one-spec
                - new-cypress-config/same-folder
                - new-cypress-config/support-files
                - new-cypress-config/ts-example
                - new-cypress-config/unit-tests-js
                - new-cypress-config/use-webpack
      - windows_test
      - publish:
          filters:
            branches:
              only:
                - master
                - beta
                - next
                - dev
          requires:
            - lint
            - test-code-coverage-plugin
            - test-old-cypress-config/all-files
            - test-old-cypress-config/backend
            - test-old-cypress-config/before-all-visit
            - test-old-cypress-config/before-each-visit
            - test-old-cypress-config/exclude-files
            - test-old-cypress-config/frontend
            - test-old-cypress-config/fullstack
            - test-old-cypress-config/one-spec
            - test-old-cypress-config/same-folder
            - test-old-cypress-config/support-files
            - test-old-cypress-config/ts-example
            - test-old-cypress-config/unit-tests-js
            - test-old-cypress-config/use-webpack
            - test-new-cypress-config/all-files
            - test-new-cypress-config/backend
            - test-new-cypress-config/before-all-visit
            - test-new-cypress-config/before-each-visit
            - test-new-cypress-config/cra-e2e-and-ct
            - test-new-cypress-config/exclude-files
            - test-new-cypress-config/frontend
            - test-new-cypress-config/fullstack
            - test-new-cypress-config/one-spec
            - test-new-cypress-config/same-folder
            - test-new-cypress-config/support-files
            - test-new-cypress-config/ts-example
            - test-new-cypress-config/unit-tests-js
            - test-new-cypress-config/use-webpack
            - windows_test
